{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = () => [\"/\"];\nconst _c1 = a0 => ({\n  \"disabled\": a0\n});\nfunction RegisterComponent_div_10_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 17);\n    i0.ɵɵtext(2, \"A senha deve ter pelo menos 8 caracteres, 1 letra mai\\u00FAscula, 1 letra min\\u00FAscula e 1 caractere especial.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_10_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 17);\n    i0.ɵɵtext(2, \"As senhas n\\u00E3o coincidem.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2, \" Nome Completo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelement(4, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \" E-mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9);\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10, \" Senha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9);\n    i0.ɵɵelement(12, \"input\", 12);\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_10_Template_button_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeFieldType($event, \"password\"));\n    });\n    i0.ɵɵelement(14, \"img\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(15, RegisterComponent_div_10_div_15_Template, 3, 0, \"div\", 6);\n    i0.ɵɵelementStart(16, \"label\");\n    i0.ɵɵtext(17, \"Confirmar Senha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 9);\n    i0.ɵɵelement(19, \"input\", 15);\n    i0.ɵɵelementStart(20, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_10_Template_button_click_20_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeFieldType($event, \"confirmPassword\"));\n    });\n    i0.ɵɵelement(21, \"img\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(22, RegisterComponent_div_10_div_22_Template, 3, 0, \"div\", 6);\n    i0.ɵɵelement(23, \"br\")(24, \"br\");\n    i0.ɵɵelementStart(25, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_10_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.nextStep());\n    });\n    i0.ɵɵtext(26, \"Pr\\u00F3ximo\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_6_0;\n    let tmp_10_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"nome\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"email\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"senha\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.passwordField);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.eyeSourcePassword, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r1.form.get(\"senha\")) == null ? null : tmp_6_0.hasError(\"passwordStrength\")) && ((tmp_6_0 = ctx_r1.form.get(\"senha\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"confirmarSenha\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.confirmPasswordField);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.eyeSourceConfirmPassword, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.hasError(\"passwordMismatch\") && ((tmp_10_0 = ctx_r1.form.get(\"confirmarSenha\")) == null ? null : tmp_10_0.touched));\n  }\n}\nfunction RegisterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_11_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.previousStep());\n    });\n    i0.ɵɵtext(2, \"Voltar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\")(4, \"br\");\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"Data de Nascimento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9);\n    i0.ɵɵelement(8, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10, \"Telefone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9);\n    i0.ɵɵelement(12, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵtext(14, \" Curr\\u00EDculo (PDF)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 9)(16, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function RegisterComponent_div_11_Template_input_change_16_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"br\")(18, \"br\");\n    i0.ɵɵelementStart(19, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_11_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵtext(20, \"Cadastrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"dataNascimento\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"telefone\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"border\", ctx_r1.setBorder(\"curriculo\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, ctx_r1.loginIn))(\"disabled\", ctx_r1.loginIn);\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"label\", 24);\n    i0.ɵɵtext(2, \"Credenciais inv\\u00E1lidas. Por favor, verifique seu login e senha.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, http, authService, router) {\n      this.fb = fb;\n      this.http = http;\n      this.authService = authService;\n      this.router = router;\n      this.passwordField = 'password';\n      this.confirmPasswordField = 'password';\n      this.eyeSourcePassword = './assets/images/invisibility.svg';\n      this.eyeSourceConfirmPassword = './assets/images/invisibility.svg';\n      this.errorMessage = '';\n      this.isSubmitting = false;\n      this.step = 1;\n      this.selectedFile = null;\n    }\n    ngOnInit() {\n      this.form = this.fb.group({\n        nome: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        senha: ['', [Validators.required, this.passwordStrengthValidator]],\n        confirmarSenha: ['', Validators.required],\n        dataNascimento: ['', [Validators.required, this.ageValidator]],\n        telefone: ['', Validators.required],\n        curriculo: ['', Validators.required]\n      }, {\n        validator: this.passwordMatchValidator // \n      });\n    }\n    passwordStrengthValidator(control) {\n      const password = control.value;\n      // Checando se a senha tem pelo menos 8 caracteres\n      const hasMinLength = password && password.length >= 8;\n      // Verificando se a senha contém pelo menos 1 letra maiúscula\n      const hasUpperCase = /[A-Z]/.test(password);\n      // Verificando se a senha contém pelo menos 1 letra minúscula\n      const hasLowerCase = /[a-z]/.test(password);\n      // Verificando se a senha contém pelo menos 1 caractere especial\n      const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n      // Se todos os critérios forem atendidos, a senha é válida\n      if (hasMinLength && hasUpperCase && hasLowerCase && hasSpecialChar) {\n        return null; // Senha válida\n      } else {\n        return {\n          passwordStrength: true\n        }; // Senha inválida\n      }\n    }\n    ageValidator(control) {\n      const birthDate = new Date(control.value);\n      const today = new Date();\n      let age = today.getFullYear() - birthDate.getFullYear();\n      const month = today.getMonth() - birthDate.getMonth();\n      if (month < 0 || month === 0 && today.getDate() < birthDate.getDate()) {\n        age--;\n      }\n      if (age < 16) {\n        return {\n          ageInvalid: true\n        }; // Se a idade for menor que 16 anos\n      }\n      return null; // Se a idade for válida\n    }\n    passwordMatchValidator(group) {\n      const password = group.get('senha') ? group.get('senha').value : '';\n      const confirmPassword = group.get('confirmarSenha') ? group.get('confirmarSenha').value : '';\n      return password === confirmPassword ? null : {\n        passwordMismatch: true\n      };\n    }\n    nextStep() {\n      debugger;\n      // Validação da primeira etapa (nome, e-mail, senha e confirmar senha)\n      const nome = this.form.get('nome');\n      const email = this.form.get('email');\n      const password = this.form.get('senha');\n      const confirmpassword = this.form.get('confirmarSenha');\n      if (nome && email && password && confirmpassword) {\n        if (nome.valid && email.valid && password.valid && confirmpassword.valid && password.value === confirmpassword.value) {\n          this.step = 2; // Se estiver tudo certo, avança para a segunda etapa\n        } else {\n          alert('Por favor, preencha todos os campos corretamente na primeira etapa.');\n        }\n      }\n    }\n    previousStep() {\n      this.step = 1;\n    }\n    setBorder(controlName) {\n      const control = this.form.get(controlName);\n      return control && control.invalid && control.touched ? '1px solid red' : '1px solid #ccc';\n    }\n    changeFieldType(event, field) {\n      event.preventDefault();\n      if (field === 'password') {\n        if (this.passwordField === 'text') {\n          this.passwordField = 'password';\n          this.eyeSourcePassword = './assets/images/invisibility.svg';\n        } else {\n          this.passwordField = 'text';\n          this.eyeSourcePassword = './assets/images/visibility.svg';\n        }\n      } else if (field === 'confirmPassword') {\n        if (this.confirmPasswordField === 'text') {\n          this.confirmPasswordField = 'password';\n          this.eyeSourceConfirmPassword = './assets/images/invisibility.svg';\n        } else {\n          this.confirmPasswordField = 'text';\n          this.eyeSourceConfirmPassword = './assets/images/visibility.svg';\n        }\n      }\n    }\n    onFileSelected(event) {\n      const fileInput = event.target;\n      if (fileInput.files && fileInput.files.length > 0) {\n        const file = fileInput.files[0]; // Aqui o 'file' já é um Blob\n        if (file.type !== 'application/pdf') {\n          this.errorMessage = 'O arquivo deve ser um PDF.';\n          this.selectedFile = null;\n        } else {\n          this.selectedFile = file; // Esse 'file' é um Blob\n          this.errorMessage = '';\n        }\n      }\n    }\n    transformNome(nome) {\n      return nome.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n    }\n    transformEmail(email) {\n      return email.toLowerCase();\n    }\n    onSubmit() {\n      debugger;\n      if (this.form.invalid || !this.selectedFile) {\n        this.errorMessage = 'Preencha todos os campos e selecione um currículo em PDF.';\n        return;\n      }\n      this.isSubmitting = true;\n      const formValues = this.form.value;\n      const candidato = {\n        nome: this.transformNome(formValues.nome),\n        email: this.transformEmail(formValues.email),\n        senha: formValues.senha,\n        dataNascimento: formValues.dataNascimento,\n        telefone: formValues.telefone,\n        curriculoPdf: this.selectedFile\n      };\n      this.authService.registerUsuario(candidato).subscribe({\n        next: response => {\n          console.log('Cadastro realizado com sucesso!', response); // Verificando a resposta\n          alert('Cadastro realizado com sucesso!');\n          this.form.reset();\n          this.selectedFile = null;\n          this.isSubmitting = false;\n          this.router.navigate(['/login']);\n        },\n        error: error => {\n          console.error('Erro ao registrar: ', error); // Verificando o erro\n          this.errorMessage = 'Erro ao registrar. Verifique os dados.';\n          this.isSubmitting = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 14,\n        vars: 6,\n        consts: [[1, \"bodydiv\"], [1, \"login-title\"], [1, \"custom-text-size14\", \"span-link1\", 2, \"margin-bottom\", \"4%\", \"margin-top\", \"4%\"], [1, \"span-link\", 3, \"routerLink\"], [1, \"form-container\"], [1, \"login-form\", 3, \"keydown.enter\", \"formGroup\"], [4, \"ngIf\"], [\"class\", \"aviso\", 4, \"ngIf\"], [1, \"line\"], [1, \"input\"], [\"formControlName\", \"nome\", \"type\", \"text\", \"autofocus\", \"\", \"required\", \"\", 1, \"email-input\"], [\"formControlName\", \"email\", \"type\", \"email\", \"autofocus\", \"\", \"required\", \"\", 1, \"email-input\"], [\"formControlName\", \"senha\", \"required\", \"\", 1, \"password-input\", 3, \"type\"], [1, \"show-password\", 3, \"click\"], [1, \"eye-icon\", 3, \"src\"], [\"formControlName\", \"confirmarSenha\", \"required\", \"\", 1, \"password-input\", 3, \"type\"], [\"type\", \"button\", 1, \"custom-text-size14\", \"login-submit\", 3, \"click\"], [1, \"error\"], [\"type\", \"button\", 1, \"custom-btn-back\", 3, \"click\"], [\"formControlName\", \"dataNascimento\", \"type\", \"date\", \"required\", \"\", 1, \"email-input\"], [\"formControlName\", \"telefone\", \"type\", \"tel\", \"mask\", \"(00) 0 0000 0000\", \"prefix\", \"+55 \", \"required\", \"\", 1, \"email-input\"], [\"formControlName\", \"curriculo\", \"type\", \"file\", \"accept\", \".pdf\", \"required\", \"\", 1, \"email-field\", 3, \"change\"], [\"type\", \"button\", 1, \"custom-text-size14\", \"login-submit\", 3, \"click\", \"ngClass\", \"disabled\"], [1, \"aviso\"], [\"for\", \"\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\", 1);\n            i0.ɵɵtext(2, \"Crie a sua conta\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵtext(4, \" J\\u00E1 tem uma conta? \");\n            i0.ɵɵelementStart(5, \"span\", 3)(6, \"ins\");\n            i0.ɵɵtext(7, \"Fa\\u00E7a o login\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(8, \"div\", 4)(9, \"form\", 5);\n            i0.ɵɵlistener(\"keydown.enter\", function RegisterComponent_Template_form_keydown_enter_9_listener() {\n              return ctx.nextStep();\n            });\n            i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 27, 14, \"div\", 6)(11, RegisterComponent_div_11_Template, 21, 10, \"div\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 3, 0, \"div\", 7);\n            i0.ɵɵelement(13, \"div\", 8);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.step === 1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.step === 2);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorPassword || ctx.errorEmail);\n          }\n        },\n        dependencies: [i5.NgClass, i5.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".login-title[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:2em;font-weight:400;color:#171725;position:relative;margin-top:30%;font-weight:500}.email-input[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:14px;font-weight:400;width:90%;margin-left:2%}.disabled[_ngcontent-%COMP%]{opacity:.7}.input[_ngcontent-%COMP%]{border-radius:3px;padding:7px;background-color:#f0f0f0;width:98%}label[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:14px;font-weight:500;margin-bottom:-5%;margin-left:2%}.input2[_ngcontent-%COMP%]{border-radius:5px;padding:4px;background-color:#fafafb;width:98%;height:32px;text-align:center;margin-bottom:3%;margin-left:-3%}.escolha[_ngcontent-%COMP%]{background-color:transparent;float:right;margin-right:5%}.email[_ngcontent-%COMP%]{margin-bottom:3%}.password-input[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:14px;font-weight:400;width:80%;float:left;margin-left:2%}input[_ngcontent-%COMP%]{border:none;height:25px;background-color:transparent;outline:none;font-family:Segoe UI,Arial,sans-serif}.forgot-password[_ngcontent-%COMP%]{display:flex;flex-flow:row;justify-content:flex-end;margin-bottom:20px;margin-top:20px;margin-right:10px}.span-link[_ngcontent-%COMP%]{color:#044894;font-weight:500;cursor:pointer;outline:none;font-family:Segoe UI,Arial,sans-serif}.span-link1[_ngcontent-%COMP%]{color:#9b9b9b;font-weight:400;outline:none;font-family:Segoe UI,Arial,sans-serif}.login-submit[_ngcontent-%COMP%]{background-color:#044894;border-radius:3px;width:100%;color:#fff;height:45px;border:1px solid #044894;margin-bottom:8%;font-family:Segoe UI,Arial,sans-serif;font-weight:500;font-size:15px}.show-password[_ngcontent-%COMP%]{border:none;background-color:transparent;margin-left:5%}.eye-icon[_ngcontent-%COMP%]{width:20px;opacity:.8}button[_ngcontent-%COMP%]{outline:none;cursor:pointer}.line[_ngcontent-%COMP%]{height:1px;width:100%;background-color:#d8d8d8;margin-bottom:20px}.bodydiv[_ngcontent-%COMP%]{margin-top:20%}.input-group[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:15px;margin-bottom:15px}.custom-btn-back[_ngcontent-%COMP%]{background-image:url(arrow-left.svg);background-repeat:no-repeat;background-position:15% 55%;background-color:#0e4e96;background-size:5px;border-radius:5px;color:#fff;width:100px;height:25px;border:1px solid #0E4E96;outline:none;margin:2px;cursor:pointer;font-family:Segoe UI,Arial,sans-serif;font-size:12px;font-weight:400}.input-field[_ngcontent-%COMP%]{width:100%;padding:12px 10px;font-size:14px;line-height:1.5;border:1px solid #ccc;border-radius:4px;box-sizing:border-box}.input-group[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]{flex:1;border-radius:3px;padding:7px;background-color:#f0f0f0;width:100%}@media (max-width: 670px){.login-title[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:1.5em;font-weight:400;color:#171725;position:relative;margin-top:70%;font-weight:500}.bodydiv[_ngcontent-%COMP%]{margin-top:25%;height:75vh}}@media (max-width: 360px){.bodydiv[_ngcontent-%COMP%]{margin-top:15%;height:70vh}}@media (max-width: 570px) and (max-height: 320px) and (orientation : landscape){.login-title[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:1.3em}.login-submit[_ngcontent-%COMP%]{background-color:#044894;border-radius:3px;width:50%;color:#fff;height:35px;border:1px solid #044894;margin-bottom:0%;position:absolute;bottom:-10%!important}}@media (max-width: 650px) and (min-height: 360px) and (orientation : landscape){.login-title[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:1.3em}.login-submit[_ngcontent-%COMP%]{background-color:#044894;border-radius:3px;width:50%;color:#fff;height:35px;border:1px solid #044894;margin-bottom:0%;position:absolute;bottom:-4%!important}}.aviso[_ngcontent-%COMP%]{font-family:Segoe UI,Arial,sans-serif;font-size:14px;font-weight:400;width:90%;margin-left:0%;color:#dc3545!important}.form-container[_ngcontent-%COMP%]{max-height:60vh;overflow-y:auto;padding-right:10px}@media (max-width: 670px){.form-container[_ngcontent-%COMP%]{max-height:50vh}}@media (max-width: 360px){.form-container[_ngcontent-%COMP%]{max-height:45vh}}\"]\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}